import React from 'react'
import {
    View,
    Text,
    ScrollView,
    StyleSheet,
} from 'react-native'
import { ThemeFunctions } from '../../../utils'
import { useSelector } from 'react-redux'
import OpenURLButton from '../../../components/ui/OpenUrlButton'

const data = {
    name: 'Bitcoin',
    shortname: 'BTC',
    marketCap: '748,785,931,397 USD',
    circulatingSupply: '19,019,468 BTC',
    totalSupply: '19,019,468 BTC',
    maxSupply: '21,000,000 BTC',
    explorer: 'https://bitcoin.org/',
    description: "The concept of Bitcoin was originally proposed by Nakamoto in 2008. According to the idea of Nakamoto, the open source software was designed and the P2P network was constructed. Bitcoin is a digital currency in the form of P2P. Peer-to-Peer transmission means a decentralaized payment system. Unlike most currencies, Bitcoin does not rely on a specific currency institution for distribution. It is generated by a large number of calculations baced on a specific algoritm. The Butcoin economy uses a distributed databace of nodes in the entire P2P network ro confirm and record all transaction behaviors. And use cryptography to ensure the decentralazation of P2P and the algorithm"
}

const TickerInfo = () => {

    const { appTheme, appColor } = useSelector(
        (state: any) => state.globalReducer,
    )

    const marketInfoKeys = {
        marketCap: 'Market Cap',
        circulatingSupply: 'Circulating Supply',
        totalSupply: 'Total Supply',
        maxSupply: 'Max Supply',
        explorer: 'Explorer',
    }

    return (
        <ScrollView contentContainerStyle={[styles.container, { backgroundColor: ThemeFunctions.setBackgroundColor(appTheme) }]}>
            <View style={styles.infoContainer}>
                <View style={styles.nameContainer}>
                    <Text style={[styles.title, ThemeFunctions.getTextColor(appColor), { marginRight: 8 }]}>
                        {data.shortname}
                    </Text>
                    <Text style={[styles.text, { color: ThemeFunctions.customText(appTheme) }]}>
                        {data.name}
                    </Text>
                </View>
                <View style={styles.marketInfoContainer}>
                    {
                        Object.keys(marketInfoKeys).map(key => {
                            const value = data[key];
                            const title = marketInfoKeys[key];
                            return (
                                <View
                                    key={key}
                                    style={styles.marketInfoRow}
                                >
                                    {
                                        key === 'explorer'
                                            ? (
                                                <>
                                                    <Text
                                                        style={[
                                                            styles.text,
                                                            { color: ThemeFunctions.customText(appTheme), minWidth: '50%' }
                                                        ]}
                                                    >{title}</Text>
                                                    <OpenURLButton
                                                        title={value}
                                                        url={value}
                                                        textStyle={[styles.text]}
                                                        containerStyle={[{ minWidth: '50%', alignItems: 'flex-end' }]}
                                                        numberOfLines={1}
                                                    />
                                                </>
                                            )
                                            : (
                                                <>
                                                    <Text
                                                        style={[
                                                            styles.text,
                                                            { color: ThemeFunctions.customText(appTheme), minWidth: '50%' }
                                                        ]}
                                                    >
                                                        {title}
                                                    </Text>
                                                    <Text
                                                        numberOfLines={1}
                                                        style={[
                                                            styles.title,
                                                            ThemeFunctions.getTextColor(appColor),
                                                            { maxWidth: '50%' }
                                                        ]}
                                                    >
                                                        {value}
                                                    </Text>
                                                </>
                                            )
                                    }
                                </View>
                            )
                        })
                    }
                </View>
            </View>
            <View style={styles.descrContainer}>
                <Text style={[styles.title, ThemeFunctions.getTextColor(appColor), { marginBottom: 8 }]}>Info</Text>
                <Text style={[styles.text, { color: ThemeFunctions.customText(appTheme), marginBottom: 4 }]}>
                    {`What is ${data.name}?`}
                </Text>
                <Text style={[styles.text, { color: ThemeFunctions.customText(appTheme) }]}>
                    {
                        data.description
                    }
                </Text>
            </View>
        </ScrollView>
    )
}

export default TickerInfo;

const styles = StyleSheet.create({
    container: {
        paddingHorizontal: 16,
        paddingTop: 24,
    },
    infoContainer: {
    },
    descrContainer: {

    },
    nameContainer: {
        flexDirection: 'row',
        marginBottom: 16,
    },
    marketInfoContainer: {
        marginBottom: 12,
    },
    marketInfoRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginBottom: 8,
    },
    text: {
        fontSize: 16,
        fontWeight: '400',
        lineHeight: 22,
    },
    title: {
        fontSize: 16,
        fontWeight: '500',
        lineHeight: 22,
    }
})

